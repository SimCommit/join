@use './../../../styles/mixins' as *;
@use './../../../styles/_variables' as *;
@use './task-create-form.overlay.scss' as *;

h2 {
  font-size: clamp(47px, calc(6vw + 4px), 61px);
  position: sticky;
  top: 0;
  z-index: 1;
  background-color: $lightest-grey;
}

section {
  padding: min(3%, 30px) min(3%, 80px);
  padding-top: 0px;
  padding-bottom: 0px;
  height: calc(100vh - 96px);
  max-width: 1080px;
  overflow-y: auto;
}

h2 {
  padding-top: 24px;
  align-self: flex-start;
}

.fullcontent {
  @include dFlex($jc: space-between, $ai: flex-start);
  flex-wrap: wrap;
  margin-top: 24px;
}

.red {
  color: $error-muted;
}

.left-content {
  flex-shrink: 0;
  > div {
    margin-bottom: 40px;
    p {
      margin-bottom: 12px;
    }
    textarea {
      width: 100%;
      height: 120px;
      border: 1px solid $lighter-grey;
      border-radius: 12px;
      padding: 20px;
      resize: none;
      color: black;
      &::placeholder {
        color: $lighter-grey;
        font-size: 16px;
      }
      &:focus {
        border: 1px solid $input-focus-blue;
        outline: none;
      }
    }
  }
}

.input {
  width: 100%;
  height: clamp(40px, calc(3vw + 2px), 48px);
  border: 1px solid $lighter-grey;
  border-radius: 12px;
  padding-inline: 20px;
  &::placeholder {
    color: $lighter-grey;
    font-size: 16px;
  }
  &:focus {
    border: 1px solid $input-focus-blue;
    outline: none;
  }
}

.separator {
  width: 1px;
  height: 524px;
  background: $lighter-grey;
}

.right-content {
  > div {
    margin-bottom: 24px;
    > p {
      margin-bottom: 12px;
    }
  }
}

.left-content,
.right-content {
  width: clamp(43rem, 28.571vw + 8.714rem, 47rem);
}

.button-wrapper {
  @include dFlex($jc: space-between);
  > button {
    width: clamp(120px, calc(7vw + 10px), 136px);
    height: clamp(41px, calc(4vw + 2px), 56px);
    border-radius: 12px;
    @include dFlex($jc: center);
    font-size: clamp(16px, calc(1vw + 2px), 21px);
    font-weight: 400;
  }
}

.btn-not-selectet {
  border: 1px solid $lighter-grey;
  background: $white;
  &:hover {
    transition: 125ms ease;
    transform: translateY(-3px);
    box-shadow: -3px 3px 5px $lighter-grey;
  }
}

.menu-wrapper {
  width: 100%;
  height: clamp(40px, 3vw + 2px, 48px);
  @include dFlex($jc: space-between);
  background: $white;
  padding: 20px;
  border: 1px solid $lighter-grey;
  border-radius: 12px;
  &:hover {
    cursor: pointer;
  }
  > div {
    @include dFlex($jc: center);
  }
}

.input-button {
  @include dFlex($ai: center);
  width: 24px;
  height: 24px;
  &:hover {
    cursor: pointer;
    border-radius: 50%;
    background-color: $lighter-grey;
  }
}

img.rotated {
  transform: rotate(180deg);
  transition: all 0.3s ease;
}

.assignt-contact-wrapper {
  @include styled-checkbox();
  @include dFlex($jc: space-between);
  height: 48px;
  border-radius: 10px;
  padding-left: 12px;
  padding-right: 12px;
  transition: all 0.3s ease;
  margin-bottom: 2px;
  &:hover {
    background: rgba(0, 0, 0, 0.05);
    cursor: pointer;
  }
  > div {
    @include dFlex($jc: flex-start);
    gap: 12px;
  }
}

.create-btn {
  @include primaryButton();
}

.clear-btn {
  @include secondaryButton();
}

.btn-button-wrapper {
  width: 100%;
  padding-top: 16px;
  padding-bottom: 16px;
  position: sticky;
  bottom: 0;
  z-index: 2;
  background-color: $lightest-grey;
  @include dFlex($jc: flex-end, $ai: flex-end);
  > div {
    @include dFlex($jc: flex-end, $ai: start);
    gap: 40px;
  }
}

.assignt-contact-wrapper:has(.assign-checkbox:checked) {
  background-color: $blue;
  color: $white;
}

.assignt-contact-wrapper .checkmark::before {
  border: solid $blue;
  border-width: 0 9px 0px 0;
}

.assignt-contact-wrapper .checkmark::after {
  border: solid white;
  border-width: 0 3px 3px 0;
}

.btn-urgent {
  background-color: $urgent-red;
  border: 2px solid $lightest-grey;
  color: $white;
  font-weight: 700;
  path {
    fill: $white !important;
  }
}

.btn-medium {
  background-color: $medium-orange;
  border: 2px solid $lightest-grey;
  color: $white;
  font-weight: 700 !important;
  path {
    fill: $white;
  }
}

.btn-low {
  background-color: $low-green;
  border: 2px solid $lightest-grey;
  color: $white;
  font-weight: 700 !important;
  path {
    fill: $white;
  }
}

.initials-wrapper {
  @include dFlex($jc: flex-start);
}

input.ng-invalid.ng-touched {
  border-color: $error-muted;
}

.error {
  margin-top: 4px;
  color: $error-muted;
  font-size: 16px;
  font-weight: 200;
  position: absolute;
}

.error-border {
  border-color: $error-muted;
}

.subtask-wrapper {
  @include dFlex($ai: center);
  > input {
    width: 75%;
    border-right: none;
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
  }
  > div {
    @include dFlex($ai: center, $jc: space-between);
    width: 25%;
    height: clamp(40px, 3vw + 2px, 48px);
    background: $white;
    border: 1px solid $lighter-grey;
    border-left: none;
    border-bottom-right-radius: 12px;
    border-top-right-radius: 12px;
    padding-right: 20px;
  }
  > div:nth-child(2) {
    @include dFlex($jc: flex-end);
  }
}

.subtask-container {
  width: 100%;
  height: 100px;
  margin-top: 16px;
  overflow: auto;
  > li {
    width: 100%;
    height: clamp(40px, 3vw + 2px, 48px);
    border-radius: 12px;
    padding: 0 12px;
    @include dFlex($jc: space-between);
    > div {
      opacity: 0;
      width: 20%;
      @include dFlex($jc: space-between);
    }
    &:hover {
      background-color: $hover-grey;
      > div {
        opacity: 1;
      }
    }
  }
}

.smal-seperator {
  flex-shrink: 0;
  width: 2px;
  height: clamp(30px, 2vw + 2px, 38px);
  background: $lighter-grey;
}

.input-edit-subtask-wrapper {
  @include dFlex();
  > input,
  > div {
    width: 80%;
    height: 32px;
    border: none;
    border-bottom: 2px solid $light-blue;
  }
  > input {
    padding-left: 20px;
  }
  > div {
    @include dFlex($jc: space-between);
    background: $white;
    width: 20%;
    padding-right: 20px;
  }
}

.blue-border {
  border-color: $light-blue !important;
}

.more-avatars {
  color: $white;
  background-color: $lighter-grey;
}

.board-card {
  height: calc(88vh - 96px) !important;
  padding-top: 0;
}

.board-bg {
  background-color: $white;
}

.board-spacing {
  width: clamp(300px, calc(34vw + 20px), 460px);

  @media (max-width: 1200px) {
    width: clamp(300px, calc(34vw + 20px), 460px);
    width: 340px;
  }

  @media (max-width: 850px) {
    width: clamp(290px, calc(72vw + 20px), 640px);
  }
}

// #region File Upload
.dropzone {
  width: 100%;
  height: 100px;
}
// #endregion

// #region Media Queries
@media (max-width: 1200px) {
  section {
    height: calc(100vh - 176px);
  }

  .left-content,
  .right-content {
    width: clamp(38rem, 43.478vw + 1.043rem, 48rem);
  }

  .board-spacing {
    width: clamp(33rem, 40vw - 1rem, 47rem);
  }
}

@media (max-width: 850px) {
  section {
    padding-top: 0px;
    padding-bottom: 0px;
  }

  h2 {
    padding-top: 24px;
    align-self: flex-start;
  }

  .fullcontent {
    @include dFlex($fd: column, $ai: flex-start);
    margin-top: 24px;
  }

  .separator {
    display: none;
  }

  .left-content,
  .right-content {
    width: clamp(28.6rem, 93.585vw - 1.347rem, 78.2rem);
  }

  .board-spacing {
    width: clamp(62.2rem, 82.927vw - 1.488rem, 69rem);
  }

  .btn-button-wrapper {
    padding-top: 16px;
    padding-bottom: 16px;
    position: sticky;
    bottom: 0;
    z-index: 2;
    background-color: $lightest-grey;
    min-width: 290px;
  }

  .btn-wrapper-Board {
    background: $white;
  }
}

.search-wrapper {
  .search-input {
    background: transparent;
    border: none;
    outline: none;
    width: 100%;
    font-size: 16px;
    color: $black;

    &::placeholder {
      color: $lighter-grey;
    }
  }

  .clear-btn {
    .clear-icon {
      font-size: 18px;
      color: $lighter-grey;
      font-weight: bold;
    }
  }
}
// #endregion
