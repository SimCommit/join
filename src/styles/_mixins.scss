@use "./_variables" as *;

@mixin dFlex($jc: center, $ai: center, $fd: row, $g: 0) {
  display: flex;
  justify-content: $jc;
  align-items: $ai;
  flex-direction: $fd;
  gap: $g;
}

@mixin generalMaxWidth() {
  max-width: 1440px;
}

@mixin primaryButton($p: 12px 12px, $fs: 16px, $fw: 500) {
  @include dFlex();
  padding: $p;
  font-size: $fs;
  height: 50px;
  background: $blue;
  border: 1px solid $blue;
  border-radius: 10px;
  font-weight: $fw;
  color: $white;
  cursor: pointer;
  transition: all 125ms;

  &:hover:not(:disabled) {
    border-color: $light-blue;
    background-color: $light-blue;
    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.1);

    svg path {
      fill: currentColor;
    }
  }

  &:disabled {
    background: $light-grey;
    border-color: $light-grey;
    cursor: not-allowed;
  }

  &:active:not(:disabled) {
    border-color: $dark-blue;
    background-color: $dark-blue;
    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.1);

    svg path {
      fill: currentColor;
    }
  }
}

@mixin secondaryButton($p: 12px 12px, $fs: 16px, $fw: 500) {
  @include dFlex();
  height: 50px;
  padding: $p;
  background: transparent;
  border: 1px solid $blue;
  border-radius: 10px;
  font-weight: $fw;
  font-size: $fs;
  color: $blue;
  cursor: pointer;
  transition: all 0.3s;

  &:hover {
    border-color: $light-blue;
    color: $light-blue;
    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.1);

    svg path {
      stroke: currentColor;
    }
  }

  &:active {
    border-color: $dark-blue;
    color: $dark-blue;
    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.1);

    svg path {
      stroke: currentColor;
    }
  }
}

@mixin input($h: 48px, $bw: 1px, $fs: 20px, $p: 20px, $br: 10px, $ipr: 20px){
  >input{
    height: $h;
    width: 100%;
    border: $bw solid $lighter-grey;
    border-radius: $br;
    padding: $p;
    font-size: $fs;
    &:focus{
      border:2px solid $light-blue;
      outline: none;
    }
  }
  >div{
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: $ipr;
  }
}

@mixin styled-checkbox(
  $main-color: $blue,
  $check-color: white,
  $unchecked-bg: transparent,
  $unchecked-border: $main-color,
  $checked-bg: $main-color,
  $checked-border: $check-color
) {
  position: relative;
  display: inline-block;
  cursor: pointer;

  input {
    position: absolute;
    opacity: 0;
    height: 0;
    width: 0;
  }

  .checkmark {
    transition: all 0.3s ease;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 12px;
    height: 20px;
    width: 20px;
    border-radius: 4px;
    background-color: $unchecked-bg;
    border: 2px solid $unchecked-border;

    &::after,
    &::before {
      content: "";
      position: absolute;
      transition: all 0.3s ease;
      opacity: 0;
    }

    &::before {
      left: 9px;
      top: -8px;
      width: 4px;
      height: 22px;
      border: solid $check-color;
      border-width: 0 9px 0px 0;
      transform: rotate(45deg);
      z-index: 2;
    }

    &::after {
      left: 8px;
      top: -6px;
      width: 8px;
      height: 16px;
      border: solid $main-color;
      border-width: 0 3px 3px 0;
      transform: rotate(45deg);
      z-index: 2;
    }
  }

  input:checked + .checkmark {
    background-color: $checked-bg;
    border: 2px solid $checked-border;

    &::after,
    &::before {
      opacity: 1;
    }
  }
}